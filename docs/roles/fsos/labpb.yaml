####################### configure network switches #######################
- name: configure private vlan
  hosts: fs3900
  connection: ansible.netcommon.network_cli
  gather_facts: false
  vars:
    - vlan_id: "{{ private_vlan }}"
    - vlan_name: private
    - state: present
  roles:
    - threefold.farm_mgmt.fsos_vlan

- name: configure public vlan
  hosts: fs3900
  connection: ansible.netcommon.network_cli
  gather_facts: false
  vars:
    - vlan_id: "{{ public_vlan }}"
    - vlan_name: public
    - state: present
  roles:
    - threefold.farm_mgmt.fsos_vlan



- name: add private vlan members
  hosts: fs3900
  connection: ansible.netcommon.network_cli
  gather_facts: false
  vars:
    - interface_range: "{{ private_interface_range }}"
    - mode: access
    - vlan_id: "{{ private_vlan }}"
  roles:
    - threefold.farm_mgmt.fsos_switchport

- name: add public vlan members
  hosts: fs3900
  connection: ansible.netcommon.network_cli
  gather_facts: false
  vars:
    - interface_range: "{{ public_interface_range }}"
    - mode: access
    - vlan_id: "{{ public_vlan }}"
  roles:
    - threefold.farm_mgmt.fsos_switchport




- name: allow public and private vlans on upstream link
  hosts: fs3900
  connection: ansible.netcommon.network_cli
  gather_facts: false
  vars:
    - interface_range: "{{ trunk_port }}"
    - mode: trunk
    - vlan_id: "{{ private_vlan }},{{ public_vlan }}"
    - mode: trunk
  roles:
    - threefold.farm_mgmt.fsos_switchport


- name: save running config to startup
  hosts: fs3900
  connection: ansible.netcommon.network_cli
  gather_facts: false
  tasks:
    - cisco.ios.ios_command:
        commands:
          - command: copy running-config startup-config
            prompt: "startup configuration file name:"
            answer: lab

############################################  dhcp config  ##########################################################
- name: Add mappings to dhcp
  hosts: openwrt
  tasks:
    - blockinfile:
        path: /etc/config/dhcp
        block: |
          config host
                  option name '{{ item["hostname"] }}'
                  option dns '1'
                  option mac '{{ item["mac_address"] }}'
                  option ip '{{ item["ip_address"] }}'
        marker: "\n# AUTOMATED BLOCK {{ item['hostname'] }}"
        
      with_items: "{{ servers }}"

- name: reload dnsmasq
  hosts: openwrt
  tasks:
    - shell: /etc/init.d/dnsmasq reload
